{"version":3,"sources":["Components/dt-logo.png","Components/about-icon.png","Components/filter-icon.png","Components/loading-screen.png","assets/png/marker.png","data/trees.js","data/sciName.js","Components/Filters.js","Components/About.js","Components/Navbar.js","Components/withLoadingSpinner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","trees","key","text","value","scientificName","Filters","state","condition","ward","commonName","sciName","handleCondition","e","_ref","_this","setState","handleWard","_ref2","handleCommonName","_ref3","handleSciName","_ref4","handleReset","props","resetFilters","closeFilters","handleSubmit","handleFilters","this","react_default","a","createElement","Sidebar","as","Segment","animation","icon","direction","visible","width","style","backgroundColor","zIndex","paddingRight","Header","size","color","Divider","Form","onSubmit","fontWeight","Group","inline","Field","control","Radio","label","checked","onChange","widths","Select","fluid","options","placeholder","treesSciNames","Button","type","onClick","Component","About","Image","src","logo","href","target","rel","Navbar","filterVisibility","aboutVisibility","handleFilterClick","handleAboutClick","setTimeout","pinkStyling","Menu","inverted","vertical","Popup","trigger","Item","filter","margin","content","position","basic","about","Components_Filters","Components_About","withLoadingSpinner","WrappedComponent","_Component","_class","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loading","inherits","createClass","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","_this2","wrap","_context","prev","next","err","console","log","stop","apply","arguments","id","alt","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","customIcon","iconSize","URL","App","componentDidMount","fetchTrees","fetch","concat","coords","then","res","json","data","features","handleMapMove","swLng","leafletMap","leafletElement","getBounds","_southWest","lng","swLat","lat","neLng","_northEast","neLat","zoom","mapCenter","Pushable","height","overflow","Components_Navbar","Pusher","Map","ref","m","center","maxZoom","onMoveEnd","TileLayer","attribution","url","accessToken","react_leaflet_markercluster_min_default","map","tree","Marker","properties","geometry","coordinates","fontColor","es_Popup","common_name","scientific_name","fam_name","genus_name","address","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77822fa1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dt-logo.a67f90e4.png\";","module.exports = __webpack_public_path__ + \"static/media/about-icon.b7374a05.png\";","module.exports = __webpack_public_path__ + \"static/media/filter-icon.58e6c6c4.png\";","module.exports = __webpack_public_path__ + \"static/media/loading-screen.84feceed.png\";","module.exports = __webpack_public_path__ + \"static/media/marker.abb149dc.png\";","const trees = [\n  {key: \"Abrovitae\", text: \"Abrovitae\", value: \"Abrovitae\"},\n  {key: \"Alleghany serviceberry\", text: \"Alleghany serviceberry\", value: \"Alleghany serviceberry\"},\n  {key: \"American Holly\", text: \"American Holly\", value: \"American Holly\"},\n  {key: \"American Smoketree\", text: \"American Smoketree\", value: \"American Smoketree\"},\n  {key: \"American beech\", text: \"American beech\", value: \"American beech\"},\n  {key: \"American elm\", text: \"American elm\", value: \"American elm\"},\n  {key: \"American hop hornbeam\", text: \"American hop hornbeam\", value: \"American hop hornbeam\"},\n  {key: \"American linden\", text: \"American linden\", value: \"American linden\"},\n  {key: \"American sycamore\", text: \"American sycamore\", value: \"American sycamore\"},\n  {key: \"Amur maackia\", text: \"Amur maackia\", value: \"Amur maackia\"},\n  {key: \"Amur maple\", text: \"Amur maple\", value: \"Amur maple\"},\n  {key: \"Arnold crabapple\", text: \"Arnold crabapple\", value: \"Arnold crabapple\"},\n  {key: \"Ash\", text: \"Ash\", value: \"Ash\"},\n  {key: \"Augustine elm\", text: \"Augustine elm\", value: \"Augustine elm\"},\n  {key: \"Bald cypress\", text: \"Bald cypress\", value: \"Bald cypress\"},\n  {key: \"Bea Schwartz Dutch elm\", text: \"Bea Schwartz Dutch elm\", value: \"Bea Schwartz Dutch elm\"},\n  {key: \"Bear Oak\", text: \"Bear Oak\", value: \"Bear Oak\"},\n  {key: \"Birch\", text: \"Birch\", value: \"Birch\"},\n  {key: \"Black locust\", text: \"Black locust\", value: \"Black locust\"},\n  {key: \"Black oak\", text: \"Black oak\", value: \"Black oak\"},\n  {key: \"Black walnut\", text: \"Black walnut\", value: \"Black walnut\"},\n  {key: \"Blackjack Oak\", text: \"Blackjack Oak\", value: \"Blackjack Oak\"},\n  {key: \"Blandford Dutch elm\", text: \"Blandford Dutch elm\", value: \"Blandford Dutch elm\"},\n  {key: \"Bloodgood london plane tree\", text: \"Bloodgood london plane tree\", value: \"Bloodgood london plane tree\"}, {key: \"Boxelder maple\", text: \"Boxelder maple\", value: \"Boxelder maple\"}, {key: \"Bradford callery pear\", text: \"Bradford callery pear\", value: \"Bradford callery pear\"}, {key: \"Bur oak\", text: \"Bur oak\", value: \"Bur oak\"}, {key: \"Carolina poplar\", text: \"Carolina poplar\", value: \"Carolina poplar\"}, {key: \"Carolina silverbell\", text: \"Carolina silverbell\", value: \"Carolina silverbell\"}, {key: \"Cherry\", text: \"Cherry\", value: \"Cherry\"}, {key: \"Cherry (Snowgoose)\", text: \"Cherry (Snowgoose)\", value: \"Cherry (Snowgoose)\"}, {key: \"Cherrybark Oak\", text: \"Cherrybark Oak\", value: \"Cherrybark Oak\"}, {key: \"Chestnut oak\", text: \"Chestnut oak\", value: \"Chestnut oak\"}, {key: \"Chinese Fringetree\", text: \"Chinese Fringetree\", value: \"Chinese Fringetree\"}, {key: \"Chinese elm\", text: \"Chinese elm\", value: \"Chinese elm\"}, {key: \"Chinese flame tree\", text: \"Chinese flame tree\", value: \"Chinese flame tree\"}, {key: \"Chinese fringetree\", text: \"Chinese fringetree\", value: \"Chinese fringetree\"}, {key: \"Chinese pistachio\", text: \"Chinese pistachio\", value: \"Chinese pistachio\"}, {key: \"Chokecherry\", text: \"Chokecherry\", value: \"Chokecherry\"}, {key: \"Columnar English oak\", text: \"Columnar English oak\", value: \"Columnar English oak\"}, {key: \"Columnare Norway maple\", text: \"Columnare Norway maple\", value: \"Columnare Norway maple\"}, {key: \"Columnare red maple\", text: \"Columnare red maple\", value: \"Columnare red maple\"}, {key: \"Columnare sugar maple\", text: \"Columnare sugar maple\", value: \"Columnare sugar maple\"}, {key: \"Commelin Dutch elm\", text: \"Commelin Dutch elm\", value: \"Commelin Dutch elm\"}, {key: \"Copper Beech\", text: \"Copper Beech\", value: \"Copper Beech\"}, {key: \"Crabapple\", text: \"Crabapple\", value: \"Crabapple\"}, {key: \"Crabapple (Harvest Gold)\", text: \"Crabapple (Harvest Gold)\", value: \"Crabapple (Harvest Gold)\"}, {key: \"Crape myrtle\", text: \"Crape myrtle\", value: \"Crape myrtle\"}, {key: \"Crimean linden\", text: \"Crimean linden\", value: \"Crimean linden\"}, {key: \"Crimson Cloud hawthorn\", text: \"Crimson Cloud hawthorn\", value: \"Crimson Cloud hawthorn\"}, {key: \"Crimson King Norway maple\", text: \"Crimson King Norway maple\", value: \"Crimson King Norway maple\"}, {key: \"Cucumber magnolia\", text: \"Cucumber magnolia\", value: \"Cucumber magnolia\"}, {key: \"Darlington oak\", text: \"Darlington oak\", value: \"Darlington oak\"}, {key: \"Dawn redwood\", text: \"Dawn redwood\", value: \"Dawn redwood\"}, {key: \"Deborah Norway maple\", text: \"Deborah Norway maple\", value: \"Deborah Norway maple\"}, {key: \"Deodar cedar\", text: \"Deodar cedar\", value: \"Deodar cedar\"}, {key: \"Dogwood\", text: \"Dogwood\", value: \"Dogwood\"}, {key: \"Dogwood (Kousa)\", text: \"Dogwood (Kousa)\", value: \"Dogwood (Kousa)\"}, {key: \"Downy serviceberry\", text: \"Downy serviceberry\", value: \"Downy serviceberry\"}, {key: \"Dura heat' river birch\", text: \"Dura heat' river birch\", value: \"Dura heat' river birch\"}, {key: \"Eastern redbud\", text: \"Eastern redbud\", value: \"Eastern redbud\"}, {key: \"Eastern redcedar\", text: \"Eastern redcedar\", value: \"Eastern redcedar\"}, {key: \"Elm\", text: \"Elm\", value: \"Elm\"}, {key: \"Elm (Accolade)\", text: \"Elm (Accolade)\", value: \"Elm (Accolade)\"}, {key: \"Emerald Queen Norway maple\", text: \"Emerald Queen Norway maple\", value: \"Emerald Queen Norway maple\"}, {key: \"European beech\", text: \"European beech\", value: \"European beech\"}, {key: \"European black alder\", text: \"European black alder\", value: \"European black alder\"}, {key: \"European mountain-ash\", text: \"European mountain-ash\", value: \"European mountain-ash\"}, {key: \"Flowering Dogwood\", text: \"Flowering Dogwood\", value: \"Flowering Dogwood\"}, {key: \"Forest Pansy redbud\", text: \"Forest Pansy redbud\", value: \"Forest Pansy redbud\"}, {key: \"Ginkgo\", text: \"Ginkgo\", value: \"Ginkgo\"}, {key: \"Ginkgo (female)\", text: \"Ginkgo (female)\", value: \"Ginkgo (female)\"}, {key: \"Ginkgo (male)\", text: \"Ginkgo (male)\", value: \"Ginkgo (male)\"}, {key: \"Ginkgo Princeton Sentry\", text: \"Ginkgo Princeton Sentry\", value: \"Ginkgo Princeton Sentry\"}, {key: \"Glenleven linden\", text: \"Glenleven linden\", value: \"Glenleven linden\"}, {key: \"Golden chain tree\", text: \"Golden chain tree\", value: \"Golden chain tree\"}, {key: \"Goldenrain tree\", text: \"Goldenrain tree\", value: \"Goldenrain tree\"}, {key: \"Green Mountain sugar maple\", text: \"Green Mountain sugar maple\", value: \"Green Mountain sugar maple\"}, {key: \"Green Pillar Oak\", text: \"Green Pillar Oak\", value: \"Green Pillar Oak\"}, {key: \"Green Vase Japanese zelkova\", text: \"Green Vase Japanese zelkova\", value: \"Green Vase Japanese zelkova\"}, {key: \"Green ash\", text: \"Green ash\", value: \"Green ash\"}, {key: \"Greenspire littleleaf linden\", text: \"Greenspire littleleaf linden\", value: \"Greenspire littleleaf linden\"}, {key: \"Groenveldt Dutch elm\", text: \"Groenveldt Dutch elm\", value: \"Groenveldt Dutch elm\"}, {key: \"Hackberry\", text: \"Hackberry\", value: \"Hackberry\"}, {key: \"Hardy Rubber Tree\", text: \"Hardy Rubber Tree\", value: \"Hardy Rubber Tree\"}, {key: \"Hedge maple\", text: \"Hedge maple\", value: \"Hedge maple\"}, {key: \"Hemlock\", text: \"Hemlock\", value: \"Hemlock\"}, {key: \"Hickory\", text: \"Hickory\", value: \"Hickory\"}, {key: \"Honeylocust\", text: \"Honeylocust\", value: \"Honeylocust\"}, {key: \"Hornbeam\", text: \"Hornbeam\", value: \"Hornbeam\"}, {key: \"Hornbeam (European) (Common)\", text: \"Hornbeam (European) (Common)\", value: \"Hornbeam (European) (Common)\"}, {key: \"Horsechestnut\", text: \"Horsechestnut\", value: \"Horsechestnut\"}, {key: \"Ironwood\", text: \"Ironwood\", value: \"Ironwood\"}, {key: \"Japanese Apricot\", text: \"Japanese Apricot\", value: \"Japanese Apricot\"}, {key: \"Japanese Stewartia\", text: \"Japanese Stewartia\", value: \"Japanese Stewartia\"}, {key: \"Japanese cryptomeria\", text: \"Japanese cryptomeria\", value: \"Japanese cryptomeria\"}, {key: \"Japanese pagodatree\", text: \"Japanese pagodatree\", value: \"Japanese pagodatree\"}, {key: \"Japanese zelkova\", text: \"Japanese zelkova\", value: \"Japanese zelkova\"}, {key: \"Jefferson Elm\", text: \"Jefferson Elm\", value: \"Jefferson Elm\"}, {key: \"Katsuratree\", text: \"Katsuratree\", value: \"Katsuratree\"}, {key: \"Kentucky coffeetree\", text: \"Kentucky coffeetree\", value: \"Kentucky coffeetree\"}, {key: \"Kwanzan cherry\", text: \"Kwanzan cherry\", value: \"Kwanzan cherry\"}, {key: \"Lavalle hawthorn\", text: \"Lavalle hawthorn\", value: \"Lavalle hawthorn\"}, {key: \"Lilac\", text: \"Lilac\", value: \"Lilac\"}, {key: \"Linden\", text: \"Linden\", value: \"Linden\"}, {key: \"Littleleaf linden\", text: \"Littleleaf linden\", value: \"Littleleaf linden\"}, {key: \"Live oak\", text: \"Live oak\", value: \"Live oak\"}, {key: \"Loblolly Pine\", text: \"Loblolly Pine\", value: \"Loblolly Pine\"}, {key: \"London plane tree\", text: \"London plane tree\", value: \"London plane tree\"}, {key: \"Magnolia\", text: \"Magnolia\", value: \"Magnolia\"}, {key: \"Magnolia (Galaxy)\", text: \"Magnolia (Galaxy)\", value: \"Magnolia (Galaxy)\"}, {key: \"Maple\", text: \"Maple\", value: \"Maple\"}, {key: \"Marshall green ash\", text: \"Marshall green ash\", value: \"Marshall green ash\"}, {key: \"Mimosa\", text: \"Mimosa\", value: \"Mimosa\"}, {key: \"Moraine honeylocust\", text: \"Moraine honeylocust\", value: \"Moraine honeylocust\"}, {key: \"Mulberry\", text: \"Mulberry\", value: \"Mulberry\"}, {key: \"New Harmony elm\", text: \"New Harmony elm\", value: \"New Harmony elm\"}, {key: \"No Tree\", text: \"No Tree\", value: \"No Tree\"}, {key: \"Norway Spruce\", text: \"Norway Spruce\", value: \"Norway Spruce\"}, {key: \"Norway maple\", text: \"Norway maple\", value: \"Norway maple\"}, {key: \"Nuttall oak\", text: \"Nuttall oak\", value: \"Nuttall oak\"}, {key: \"Oak\", text: \"Oak\", value: \"Oak\"}, {key: \"October Glory red maple\", text: \"October Glory red maple\", value: \"October Glory red maple\"}, {key: \"Okame cherry\", text: \"Okame cherry\", value: \"Okame cherry\"}, {key: \"Osage orange\", text: \"Osage orange\", value: \"Osage orange\"}, {key: \"Other (See Notes)\", text: \"Other (See Notes)\", value: \"Other (See Notes)\"}, {key: \"Overcup oak\", text: \"Overcup oak\", value: \"Overcup oak\"}, {key: \"Pagoda Dogwood\", text: \"Pagoda Dogwood\", value: \"Pagoda Dogwood\"}, {key: \"Paperbark Maple\", text: \"Paperbark Maple\", value: \"Paperbark Maple\"}, {key: \"Persian Parrotia\", text: \"Persian Parrotia\", value: \"Persian Parrotia\"}, {key: \"Pin oak\", text: \"Pin oak\", value: \"Pin oak\"}, {key: \"Pink-Flowering Dogwood\", text: \"Pink-Flowering Dogwood\", value: \"Pink-Flowering Dogwood\"}, {key: \"Pioneer elm\", text: \"Pioneer elm\", value: \"Pioneer elm\"}, {key: \"Plane tree\", text: \"Plane tree\", value: \"Plane tree\"}, {key: \"Pond cypress\", text: \"Pond cypress\", value: \"Pond cypress\"}, {key: \"Poplar\", text: \"Poplar\", value: \"Poplar\"}, {key: \"Post Oak\", text: \"Post Oak\", value: \"Post Oak\"}, {key: \"Post oak\", text: \"Post oak\", value: \"Post oak\"}, {key: \"Princeton elm\", text: \"Princeton elm\", value: \"Princeton elm\"}, {key: \"Purple leaf plum\", text: \"Purple leaf plum\", value: \"Purple leaf plum\"}, {key: \"Radiant crabapple\", text: \"Radiant crabapple\", value: \"Radiant crabapple\"}, {key: \"Red Buckeye\", text: \"Red Buckeye\", value: \"Red Buckeye\"}, {key: \"Red horsechestnut\", text: \"Red horsechestnut\", value: \"Red horsechestnut\"}, {key: \"Red maple\", text: \"Red maple\", value: \"Red maple\"}, {key: \"Red oak\", text: \"Red oak\", value: \"Red oak\"}, {key: \"Redbud\", text: \"Redbud\", value: \"Redbud\"}, {key: \"Redmond American Linden\", text: \"Redmond American Linden\", value: \"Redmond American Linden\"}, {key: \"Regent Japanese pagodatree\", text: \"Regent Japanese pagodatree\", value: \"Regent Japanese pagodatree\"}, {key: \"River birch\", text: \"River birch\", value: \"River birch\"}, {key: \"Rock chestnut oak\", text: \"Rock chestnut oak\", value: \"Rock chestnut oak\"}, {key: \"Rotundiloba sweetgum\", text: \"Rotundiloba sweetgum\", value: \"Rotundiloba sweetgum\"}, {key: \"Royal paulownia\", text: \"Royal paulownia\", value: \"Royal paulownia\"}, {key: \"Sassafras\", text: \"Sassafras\", value: \"Sassafras\"}, {key: \"Saucer Magnolia\", text: \"Saucer Magnolia\", value: \"Saucer Magnolia\"}, {key: \"Saucer magnolia\", text: \"Saucer magnolia\", value: \"Saucer magnolia\"}, {key: \"Sawtooth oak\", text: \"Sawtooth oak\", value: \"Sawtooth oak\"}, {key: \"Scarlet oak\", text: \"Scarlet oak\", value: \"Scarlet oak\"}, {key: \"Seneca Chief Sugar maple\", text: \"Seneca Chief Sugar maple\", value: \"Seneca Chief Sugar maple\"}, {key: \"Serviceberry\", text: \"Serviceberry\", value: \"Serviceberry\"}, {key: \"Shadblow serviceberry\", text: \"Shadblow serviceberry\", value: \"Shadblow serviceberry\"}, {key: \"Shademaster honeylocust\", text: \"Shademaster honeylocust\", value: \"Shademaster honeylocust\"}, {key: \"Shingle oak\", text: \"Shingle oak\", value: \"Shingle oak\"}, {key: \"Shumard oak\", text: \"Shumard oak\", value: \"Shumard oak\"}, {key: \"Siberian elm\", text: \"Siberian elm\", value: \"Siberian elm\"}, {key: \"Silver linden\", text: \"Silver linden\", value: \"Silver linden\"}, {key: \"Silver maple\", text: \"Silver maple\", value: \"Silver maple\"}, {key: \"Skyline honeylocust\", text: \"Skyline honeylocust\", value: \"Skyline honeylocust\"}, {key: \"Slender Silhouette Sweetgum\", text: \"Slender Silhouette Sweetgum\", value: \"Slender Silhouette Sweetgum\"}, {key: \"Smooth-leaf Elm\", text: \"Smooth-leaf Elm\", value: \"Smooth-leaf Elm\"}, {key: \"Snowdrift crabapple\", text: \"Snowdrift crabapple\", value: \"Snowdrift crabapple\"}, {key: \"Sourwood\", text: \"Sourwood\", value: \"Sourwood\"}, {key: \"Southern catalpa\", text: \"Southern catalpa\", value: \"Southern catalpa\"}, {key: \"Southern magnolia\", text: \"Southern magnolia\", value: \"Southern magnolia\"}, {key: \"Southern red oak\", text: \"Southern red oak\", value: \"Southern red oak\"}, {key: \"Sovereign pin oak\", text: \"Sovereign pin oak\", value: \"Sovereign pin oak\"}, {key: \"Staghorn Sumac\", text: \"Staghorn Sumac\", value: \"Staghorn Sumac\"}, {key: \"Star magnolia\", text: \"Star magnolia\", value: \"Star magnolia\"}, {key: \"Sugar maple\", text: \"Sugar maple\", value: \"Sugar maple\"}, {key: \"Sugarberry\", text: \"Sugarberry\", value: \"Sugarberry\"}, {key: \"Summershade Norway maple\", text: \"Summershade Norway maple\", value: \"Summershade Norway maple\"}, {key: \"Sunburst honeylocust\", text: \"Sunburst honeylocust\", value: \"Sunburst honeylocust\"}, {key: \"Swamp white oak\", text: \"Swamp white oak\", value: \"Swamp white oak\"}, {key: \"Sweetbay magnolia\", text: \"Sweetbay magnolia\", value: \"Sweetbay magnolia\"}, {key: \"Sweetgum\", text: \"Sweetgum\", value: \"Sweetgum\"}, {key: \"Sweetgum (sterile)\", text: \"Sweetgum (sterile)\", value: \"Sweetgum (sterile)\"}, {key: \"Sycamore maple\", text: \"Sycamore maple\", value: \"Sycamore maple\"}, {key: \"Thornless honeylocust\", text: \"Thornless honeylocust\", value: \"Thornless honeylocust\"}, {key: \"Tree-of-heaven\", text: \"Tree-of-heaven\", value: \"Tree-of-heaven\"}, {key: \"Trident maple\", text: \"Trident maple\", value: \"Trident maple\"}, {key: \"Tulip poplar\", text: \"Tulip poplar\", value: \"Tulip poplar\"}, {key: \"Tupelo\", text: \"Tupelo\", value: \"Tupelo\"}, {key: \"Turkey oak\", text: \"Turkey oak\", value: \"Turkey oak\"}, {key: \"Village Green Japanese zelkova\", text: \"Village Green Japanese zelkova\", value: \"Village Green Japanese zelkova\"}, {key: \"Washington hawthorn\", text: \"Washington hawthorn\", value: \"Washington hawthorn\"}, {key: \"Water oak\", text: \"Water oak\", value: \"Water oak\"}, {key: \"Weeping willow\", text: \"Weeping willow\", value: \"Weeping willow\"}, {key: \"White oak\", text: \"White oak\", value: \"White oak\"}, {key: \"White pine\", text: \"White pine\", value: \"White pine\"}, {key: \"Whitehouse callery pear\", text: \"Whitehouse callery pear\", value: \"Whitehouse callery pear\"}, {key: \"Willow\", text: \"Willow\", value: \"Willow\"}, {key: \"Willow oak\", text: \"Willow oak\", value: \"Willow oak\"}, {key: \"Yellow buckeye\", text: \"Yellow buckeye\", value: \"Yellow buckeye\"}, {key: \"Yellowwood\", text: \"Yellowwood\", value: \"Yellowwood\"}, {key: \"Yoshino cherry\", text: \"Yoshino cherry\", value: \"Yoshino cherry\"},\n]\n\nexport default trees\n","const scientificName = [\n{key: \"Acer buergeranum\", text: \"Acer buergeranum\", value: \"Acer buergeranum\"}, {key: \"Acer campestre\", text: \"Acer campestre\", value: \"Acer campestre\"}, {key: \"Acer ginnala\", text: \"Acer ginnala\", value: \"Acer ginnala\"}, {key: \"Acer griseum\", text: \"Acer griseum\", value: \"Acer griseum\"}, {key: \"Acer negundo\", text: \"Acer negundo\", value: \"Acer negundo\"}, {key: \"Acer platanoides\", text: \"Acer platanoides\", value: \"Acer platanoides\"}, {key: \"Acer platanoides 'Cleveland'\", text: \"Acer platanoides 'Cleveland'\", value: \"Acer platanoides 'Cleveland'\"}, {key: \"Acer platanoides 'Columnare'\", text: \"Acer platanoides 'Columnare'\", value: \"Acer platanoides 'Columnare'\"}, {key: \"Acer platanoides 'Crimson King'\", text: \"Acer platanoides 'Crimson King'\", value: \"Acer platanoides 'Crimson King'\"}, {key: \"Acer platanoides 'Emerald Queen'\", text: \"Acer platanoides 'Emerald Queen'\", value: \"Acer platanoides 'Emerald Queen'\"}, {key: \"Acer platanoides 'Summershade'\", text: \"Acer platanoides 'Summershade'\", value: \"Acer platanoides 'Summershade'\"}, {key: \"Acer pseudoplatanus\", text: \"Acer pseudoplatanus\", value: \"Acer pseudoplatanus\"}, {key: \"Acer rubrum\", text: \"Acer rubrum\", value: \"Acer rubrum\"}, {key: \"Acer rubrum 'October Glory'\", text: \"Acer rubrum 'October Glory'\", value: \"Acer rubrum 'October Glory'\"}, {key: \"Acer rubrum Columnare\", text: \"Acer rubrum Columnare\", value: \"Acer rubrum Columnare\"}, {key: \"Acer saccharinum\", text: \"Acer saccharinum\", value: \"Acer saccharinum\"}, {key: \"Acer saccharum\", text: \"Acer saccharum\", value: \"Acer saccharum\"}, {key: \"Acer saccharum 'Columnare'\", text: \"Acer saccharum 'Columnare'\", value: \"Acer saccharum 'Columnare'\"}, {key: \"Acer saccharum 'Green Mountain'\", text: \"Acer saccharum 'Green Mountain'\", value: \"Acer saccharum 'Green Mountain'\"}, {key: \"Acer saccharum 'Seneca Chief'\", text: \"Acer saccharum 'Seneca Chief'\", value: \"Acer saccharum 'Seneca Chief'\"}, {key: \"Acer species\", text: \"Acer species\", value: \"Acer species\"}, {key: \"Aesculus carnea\", text: \"Aesculus carnea\", value: \"Aesculus carnea\"}, {key: \"Aesculus flava\", text: \"Aesculus flava\", value: \"Aesculus flava\"}, {key: \"Aesculus hippocastanum\", text: \"Aesculus hippocastanum\", value: \"Aesculus hippocastanum\"}, {key: \"Aesculus pavia\", text: \"Aesculus pavia\", value: \"Aesculus pavia\"}, {key: \"Ailanthus altissima\", text: \"Ailanthus altissima\", value: \"Ailanthus altissima\"}, {key: \"Alibizia julibrissin\", text: \"Alibizia julibrissin\", value: \"Alibizia julibrissin\"}, {key: \"Alnus glutinosa\", text: \"Alnus glutinosa\", value: \"Alnus glutinosa\"}, {key: \"Amelanchier arborea\", text: \"Amelanchier arborea\", value: \"Amelanchier arborea\"}, {key: \"Amelanchier canadensis\", text: \"Amelanchier canadensis\", value: \"Amelanchier canadensis\"}, {key: \"Amelanchier laevis\", text: \"Amelanchier laevis\", value: \"Amelanchier laevis\"}, {key: \"Amelanchier species\", text: \"Amelanchier species\", value: \"Amelanchier species\"}, {key: \"Betula nigra\", text: \"Betula nigra\", value: \"Betula nigra\"}, {key: \"Betula nigra 'Dura heat'\", text: \"Betula nigra 'Dura heat'\", value: \"Betula nigra 'Dura heat'\"}, {key: \"Betula species\", text: \"Betula species\", value: \"Betula species\"}, {key: \"Carpinus betulus\", text: \"Carpinus betulus\", value: \"Carpinus betulus\"}, {key: \"Carpinus caroliniana\", text: \"Carpinus caroliniana\", value: \"Carpinus caroliniana\"}, {key: \"Carpinus species\", text: \"Carpinus species\", value: \"Carpinus species\"}, {key: \"Carya species\", text: \"Carya species\", value: \"Carya species\"}, {key: \"Catalpa bignonioides\", text: \"Catalpa bignonioides\", value: \"Catalpa bignonioides\"}, {key: \"Cedrus deodora\", text: \"Cedrus deodora\", value: \"Cedrus deodora\"}, {key: \"Celtis laevigata\", text: \"Celtis laevigata\", value: \"Celtis laevigata\"}, {key: \"Celtis occidentalis\", text: \"Celtis occidentalis\", value: \"Celtis occidentalis\"}, {key: \"Cercidiphyllum japonicum\", text: \"Cercidiphyllum japonicum\", value: \"Cercidiphyllum japonicum\"}, {key: \"Cercis canadensis\", text: \"Cercis canadensis\", value: \"Cercis canadensis\"}, {key: \"Cercis canadensis 'Forest Pansy'\", text: \"Cercis canadensis 'Forest Pansy'\", value: \"Cercis canadensis 'Forest Pansy'\"}, {key: \"Cercis species\", text: \"Cercis species\", value: \"Cercis species\"}, {key: \"Chionanthus retusus\", text: \"Chionanthus retusus\", value: \"Chionanthus retusus\"}, {key: \"Cladrastis lutea\", text: \"Cladrastis lutea\", value: \"Cladrastis lutea\"}, {key: \"Cornus alternifolia\", text: \"Cornus alternifolia\", value: \"Cornus alternifolia\"}, {key: \"Cornus florida\", text: \"Cornus florida\", value: \"Cornus florida\"}, {key: \"Cornus florida var . rubra\", text: \"Cornus florida var . rubra\", value: \"Cornus florida var . rubra\"}, {key: \"Cornus kousa\", text: \"Cornus kousa\", value: \"Cornus kousa\"}, {key: \"Cornus species\", text: \"Cornus species\", value: \"Cornus species\"}, {key: \"Cotinus obovatus\", text: \"Cotinus obovatus\", value: \"Cotinus obovatus\"}, {key: \"Crataegus lavallei\", text: \"Crataegus lavallei\", value: \"Crataegus lavallei\"}, {key: \"Crataegus oxyacantha superba 'Crimson Cloud'\", text: \"Crataegus oxyacantha superba 'Crimson Cloud'\", value: \"Crataegus oxyacantha superba 'Crimson Cloud'\"}, {key: \"Crataegus phaenopyrum\", text: \"Crataegus phaenopyrum\", value: \"Crataegus phaenopyrum\"}, {key: \"Cryptomeria japonica\", text: \"Cryptomeria japonica\", value: \"Cryptomeria japonica\"}, {key: \"Eucommia ulmoides\", text: \"Eucommia ulmoides\", value: \"Eucommia ulmoides\"}, {key: \"Fagus grandiflora\", text: \"Fagus grandiflora\", value: \"Fagus grandiflora\"}, {key: \"Fagus grandifolia\", text: \"Fagus grandifolia\", value: \"Fagus grandifolia\"}, {key: \"Fagus sylvatica\", text: \"Fagus sylvatica\", value: \"Fagus sylvatica\"}, {key: \"Fagus sylvatica 'Atropuncea'\", text: \"Fagus sylvatica 'Atropuncea'\", value: \"Fagus sylvatica 'Atropuncea'\"}, {key: \"Fraxinus pennsylvanica lanceolata\", text: \"Fraxinus pennsylvanica lanceolata\", value: \"Fraxinus pennsylvanica lanceolata\"}, {key: \"Fraxinus pennsylvanica lanceolata 'Marshall'\", text: \"Fraxinus pennsylvanica lanceolata 'Marshall'\", value: \"Fraxinus pennsylvanica lanceolata 'Marshall'\"}, {key: \"Fraxinus species\", text: \"Fraxinus species\", value: \"Fraxinus species\"}, {key: \"Ginkgo biloba\", text: \"Ginkgo biloba\", value: \"Ginkgo biloba\"}, {key: \"Ginkgo biloba 'Princeton sentry'\", text: \"Ginkgo biloba 'Princeton sentry'\", value: \"Ginkgo biloba 'Princeton sentry'\"}, {key: \"Ginkgo biloba (female)\", text: \"Ginkgo biloba (female)\", value: \"Ginkgo biloba (female)\"}, {key: \"Ginkgo biloba (male)\", text: \"Ginkgo biloba (male)\", value: \"Ginkgo biloba (male)\"}, {key: \"Gleditsia species\", text: \"Gleditsia species\", value: \"Gleditsia species\"}, {key: \"Gleditsia triacanthos var. inermis\", text: \"Gleditsia triacanthos var. inermis\", value: \"Gleditsia triacanthos var. inermis\"}, {key: \"Gleditsia triacanthos var. inermis 'Moraine'\", text: \"Gleditsia triacanthos var. inermis 'Moraine'\", value: \"Gleditsia triacanthos var. inermis 'Moraine'\"}, {key: \"Gleditsia triacanthos var. inermis 'Shademaster'\", text: \"Gleditsia triacanthos var. inermis 'Shademaster'\", value: \"Gleditsia triacanthos var. inermis 'Shademaster'\"}, {key: \"Gleditsia triacanthos var. inermis 'Skyline'\", text: \"Gleditsia triacanthos var. inermis 'Skyline'\", value: \"Gleditsia triacanthos var. inermis 'Skyline'\"}, {key: \"Gleditsia triacanthos var. inermis 'Sunburst'\", text: \"Gleditsia triacanthos var. inermis 'Sunburst'\", value: \"Gleditsia triacanthos var. inermis 'Sunburst'\"}, {key: \"Gymnocladus dioicus\", text: \"Gymnocladus dioicus\", value: \"Gymnocladus dioicus\"}, {key: \"Halesia carolina\", text: \"Halesia carolina\", value: \"Halesia carolina\"}, {key: \"Ilex opaca\", text: \"Ilex opaca\", value: \"Ilex opaca\"}, {key: \"Juglans nigra\", text: \"Juglans nigra\", value: \"Juglans nigra\"}, {key: \"Juniperus virginiana\", text: \"Juniperus virginiana\", value: \"Juniperus virginiana\"}, {key: \"Koelreuteria bipinnata\", text: \"Koelreuteria bipinnata\", value: \"Koelreuteria bipinnata\"}, {key: \"Koelreuteria paniculata\", text: \"Koelreuteria paniculata\", value: \"Koelreuteria paniculata\"}, {key: \"Laburnum species\", text: \"Laburnum species\", value: \"Laburnum species\"}, {key: \"Lagerstroemia indica\", text: \"Lagerstroemia indica\", value: \"Lagerstroemia indica\"}, {key: \"Liquidambar Stryaciflua 'Sterile'\", text: \"Liquidambar Stryaciflua 'Sterile'\", value: \"Liquidambar Stryaciflua 'Sterile'\"}, {key: \"Liquidambar rotundiloba\", text: \"Liquidambar rotundiloba\", value: \"Liquidambar rotundiloba\"}, {key: \"Liquidambar styraciflua\", text: \"Liquidambar styraciflua\", value: \"Liquidambar styraciflua\"}, {key: \"Liquidambar styraciflua 'Slender Silhouette'\", text: \"Liquidambar styraciflua 'Slender Silhouette'\", value: \"Liquidambar styraciflua 'Slender Silhouette'\"}, {key: \"Liriodendron tulipifera\", text: \"Liriodendron tulipifera\", value: \"Liriodendron tulipifera\"}, {key: \"Longleaf pine Pinus palustris\", text: \"Longleaf pine Pinus palustris\", value: \"Longleaf pine Pinus palustris\"}, {key: \"Maackia amurensis\", text: \"Maackia amurensis\", value: \"Maackia amurensis\"}, {key: \"Maclura pomifera\", text: \"Maclura pomifera\", value: \"Maclura pomifera\"}, {key: \"Magnolia Liliflora x sprengeri\", text: \"Magnolia Liliflora x sprengeri\", value: \"Magnolia Liliflora x sprengeri\"}, {key: \"Magnolia Species\", text: \"Magnolia Species\", value: \"Magnolia Species\"}, {key: \"Magnolia acuminata\", text: \"Magnolia acuminata\", value: \"Magnolia acuminata\"}, {key: \"Magnolia grandiflora\", text: \"Magnolia grandiflora\", value: \"Magnolia grandiflora\"}, {key: \"Magnolia stellata\", text: \"Magnolia stellata\", value: \"Magnolia stellata\"}, {key: \"Magnolia virginiana\", text: \"Magnolia virginiana\", value: \"Magnolia virginiana\"}, {key: \"Magnolia x soulangeana\", text: \"Magnolia x soulangeana\", value: \"Magnolia x soulangeana\"}, {key: \"Malus 'Arnold'\", text: \"Malus 'Arnold'\", value: \"Malus 'Arnold'\"}, {key: \"Malus 'Harvest Gold'\", text: \"Malus 'Harvest Gold'\", value: \"Malus 'Harvest Gold'\"}, {key: \"Malus 'Radiant'\", text: \"Malus 'Radiant'\", value: \"Malus 'Radiant'\"}, {key: \"Malus 'Snowdrift'\", text: \"Malus 'Snowdrift'\", value: \"Malus 'Snowdrift'\"}, {key: \"Malus species\", text: \"Malus species\", value: \"Malus species\"}, {key: \"Metasequoia glyptostroboides\", text: \"Metasequoia glyptostroboides\", value: \"Metasequoia glyptostroboides\"}, {key: \"Morus alba\", text: \"Morus alba\", value: \"Morus alba\"}, {key: \"No Tree\", text: \"No Tree\", value: \"No Tree\"}, {key: \"Nyssa sylvatica\", text: \"Nyssa sylvatica\", value: \"Nyssa sylvatica\"}, {key: \"Ostrya virginiana\", text: \"Ostrya virginiana\", value: \"Ostrya virginiana\"}, {key: \"Other (See Notes)\", text: \"Other (See Notes)\", value: \"Other (See Notes)\"}, {key: \"Oxydendrum arboreum\", text: \"Oxydendrum arboreum\", value: \"Oxydendrum arboreum\"}, {key: \"Parrotia persica\", text: \"Parrotia persica\", value: \"Parrotia persica\"}, {key: \"Paulownia tomentosa\", text: \"Paulownia tomentosa\", value: \"Paulownia tomentosa\"}, {key: \"Persimmon Diospyros Virginia\", text: \"Persimmon Diospyros Virginia\", value: \"Persimmon Diospyros Virginia\"}, {key: \"Picea abies\", text: \"Picea abies\", value: \"Picea abies\"}, {key: \"Pinus strobus\", text: \"Pinus strobus\", value: \"Pinus strobus\"}, {key: \"Pinus taeda\", text: \"Pinus taeda\", value: \"Pinus taeda\"}, {key: \"Pistacia chinensis\", text: \"Pistacia chinensis\", value: \"Pistacia chinensis\"}, {key: \"Platanus occidentalis\", text: \"Platanus occidentalis\", value: \"Platanus occidentalis\"}, {key: \"Platanus species\", text: \"Platanus species\", value: \"Platanus species\"}, {key: \"Platanus x acerifolia\", text: \"Platanus x acerifolia\", value: \"Platanus x acerifolia\"}, {key: \"Platanus x acerifolia 'Bloodgood'\", text: \"Platanus x acerifolia 'Bloodgood'\", value: \"Platanus x acerifolia 'Bloodgood'\"}, {key: \"Populus caroliniana\", text: \"Populus caroliniana\", value: \"Populus caroliniana\"}, {key: \"Populus species\", text: \"Populus species\", value: \"Populus species\"}, {key: \"Prunus 'Snow Goose'\", text: \"Prunus 'Snow Goose'\", value: \"Prunus 'Snow Goose'\"}, {key: \"Prunus Okame\", text: \"Prunus Okame\", value: \"Prunus Okame\"}, {key: \"Prunus cerasifera\", text: \"Prunus cerasifera\", value: \"Prunus cerasifera\"}, {key: \"Prunus mume\", text: \"Prunus mume\", value: \"Prunus mume\"}, {key: \"Prunus serrulata 'Kwanzan'\", text: \"Prunus serrulata 'Kwanzan'\", value: \"Prunus serrulata 'Kwanzan'\"}, {key: \"Prunus species\", text: \"Prunus species\", value: \"Prunus species\"}, {key: \"Prunus virginiana\", text: \"Prunus virginiana\", value: \"Prunus virginiana\"}, {key: \"Prunus yedoensis\", text: \"Prunus yedoensis\", value: \"Prunus yedoensis\"}, {key: \"Pyrus calleryana 'Bradford'\", text: \"Pyrus calleryana 'Bradford'\", value: \"Pyrus calleryana 'Bradford'\"}, {key: \"Pyrus calleryana 'Whitehouse'\", text: \"Pyrus calleryana 'Whitehouse'\", value: \"Pyrus calleryana 'Whitehouse'\"}, {key: \"Quercus 'Darlingtoni'\", text: \"Quercus 'Darlingtoni'\", value: \"Quercus 'Darlingtoni'\"}, {key: \"Quercus acutissima\", text: \"Quercus acutissima\", value: \"Quercus acutissima\"}, {key: \"Quercus alba\", text: \"Quercus alba\", value: \"Quercus alba\"}, {key: \"Quercus bicolor\", text: \"Quercus bicolor\", value: \"Quercus bicolor\"}, {key: \"Quercus coccinea\", text: \"Quercus coccinea\", value: \"Quercus coccinea\"}, {key: \"Quercus falcata\", text: \"Quercus falcata\", value: \"Quercus falcata\"}, {key: \"Quercus ilicifolia\", text: \"Quercus ilicifolia\", value: \"Quercus ilicifolia\"}, {key: \"Quercus imbricaria\", text: \"Quercus imbricaria\", value: \"Quercus imbricaria\"}, {key: \"Quercus laevis\", text: \"Quercus laevis\", value: \"Quercus laevis\"}, {key: \"Quercus lyrata\", text: \"Quercus lyrata\", value: \"Quercus lyrata\"}, {key: \"Quercus macrocarpa\", text: \"Quercus macrocarpa\", value: \"Quercus macrocarpa\"}, {key: \"Quercus marilandica\", text: \"Quercus marilandica\", value: \"Quercus marilandica\"}, {key: \"Quercus montana\", text: \"Quercus montana\", value: \"Quercus montana\"}, {key: \"Quercus nigra\", text: \"Quercus nigra\", value: \"Quercus nigra\"}, {key: \"Quercus nuttallii\", text: \"Quercus nuttallii\", value: \"Quercus nuttallii\"}, {key: \"Quercus pagoda\", text: \"Quercus pagoda\", value: \"Quercus pagoda\"}, {key: \"Quercus palustris\", text: \"Quercus palustris\", value: \"Quercus palustris\"}, {key: \"Quercus palustris 'Pringreen'\", text: \"Quercus palustris 'Pringreen'\", value: \"Quercus palustris 'Pringreen'\"}, {key: \"Quercus palustris 'Sovereign'\", text: \"Quercus palustris 'Sovereign'\", value: \"Quercus palustris 'Sovereign'\"}, {key: \"Quercus phellos\", text: \"Quercus phellos\", value: \"Quercus phellos\"}, {key: \"Quercus prinus\", text: \"Quercus prinus\", value: \"Quercus prinus\"}, {key: \"Quercus robur fastigiata\", text: \"Quercus robur fastigiata\", value: \"Quercus robur fastigiata\"}, {key: \"Quercus rubra\", text: \"Quercus rubra\", value: \"Quercus rubra\"}, {key: \"Quercus shumardi\", text: \"Quercus shumardi\", value: \"Quercus shumardi\"}, {key: \"Quercus species\", text: \"Quercus species\", value: \"Quercus species\"}, {key: \"Quercus stellata\", text: \"Quercus stellata\", value: \"Quercus stellata\"}, {key: \"Quercus velutina\", text: \"Quercus velutina\", value: \"Quercus velutina\"}, {key: \"Quercus virginiana\", text: \"Quercus virginiana\", value: \"Quercus virginiana\"}, {key: \"Rhus typhina\", text: \"Rhus typhina\", value: \"Rhus typhina\"}, {key: \"Robinia pseudoacacia\", text: \"Robinia pseudoacacia\", value: \"Robinia pseudoacacia\"}, {key: \"Salix babylonica\", text: \"Salix babylonica\", value: \"Salix babylonica\"}, {key: \"Salix species\", text: \"Salix species\", value: \"Salix species\"}, {key: \"Sassafras albidum\", text: \"Sassafras albidum\", value: \"Sassafras albidum\"}, {key: \"Sorbus aucuparia\", text: \"Sorbus aucuparia\", value: \"Sorbus aucuparia\"}, {key: \"Stewartia pseudocamellia\", text: \"Stewartia pseudocamellia\", value: \"Stewartia pseudocamellia\"}, {key: \"Styphnolobium japonicum\", text: \"Styphnolobium japonicum\", value: \"Styphnolobium japonicum\"}, {key: \"Styphnolobium japonicum 'Regent'\", text: \"Styphnolobium japonicum 'Regent'\", value: \"Styphnolobium japonicum 'Regent'\"}, {key: \"Syringa reticulata\", text: \"Syringa reticulata\", value: \"Syringa reticulata\"}, {key: \"Taxodium ascendens\", text: \"Taxodium ascendens\", value: \"Taxodium ascendens\"}, {key: \"Taxodium distichum\", text: \"Taxodium distichum\", value: \"Taxodium distichum\"}, {key: \"Thuja occidentalis\", text: \"Thuja occidentalis\", value: \"Thuja occidentalis\"}, {key: \"Tilia americana\", text: \"Tilia americana\", value: \"Tilia americana\"}, {key: \"Tilia americana 'Redmond'\", text: \"Tilia americana 'Redmond'\", value: \"Tilia americana 'Redmond'\"}, {key: \"Tilia cordata\", text: \"Tilia cordata\", value: \"Tilia cordata\"}, {key: \"Tilia cordata 'Glenleven\", text: \"Tilia cordata 'Glenleven\", value: \"Tilia cordata 'Glenleven\"}, {key: \"Tilia cordata 'Greenspire'\", text: \"Tilia cordata 'Greenspire'\", value: \"Tilia cordata 'Greenspire'\"}, {key: \"Tilia euchlora\", text: \"Tilia euchlora\", value: \"Tilia euchlora\"}, {key: \"Tilia species\", text: \"Tilia species\", value: \"Tilia species\"}, {key: \"Tilia tomentosa\", text: \"Tilia tomentosa\", value: \"Tilia tomentosa\"}, {key: \"Tsuga canadensis\", text: \"Tsuga canadensis\", value: \"Tsuga canadensis\"}, {key: \"Ulmus 'Accolade'\", text: \"Ulmus 'Accolade'\", value: \"Ulmus 'Accolade'\"}, {key: \"Ulmus americana\", text: \"Ulmus americana\", value: \"Ulmus americana\"}, {key: \"Ulmus americana 'Augustine'\", text: \"Ulmus americana 'Augustine'\", value: \"Ulmus americana 'Augustine'\"}, {key: \"Ulmus americana 'Jefferson'\", text: \"Ulmus americana 'Jefferson'\", value: \"Ulmus americana 'Jefferson'\"}, {key: \"Ulmus americana 'New Harmony'\", text: \"Ulmus americana 'New Harmony'\", value: \"Ulmus americana 'New Harmony'\"}, {key: \"Ulmus americana 'Princeton'\", text: \"Ulmus americana 'Princeton'\", value: \"Ulmus americana 'Princeton'\"}, {key: \"Ulmus carpinifolia\", text: \"Ulmus carpinifolia\", value: \"Ulmus carpinifolia\"}, {key: \"Ulmus glabra\", text: \"Ulmus glabra\", value: \"Ulmus glabra\"}, {key: \"Ulmus hollandica 'Bea Schwartz'\", text: \"Ulmus hollandica 'Bea Schwartz'\", value: \"Ulmus hollandica 'Bea Schwartz'\"}, {key: \"Ulmus hollandica 'Commelin'\", text: \"Ulmus hollandica 'Commelin'\", value: \"Ulmus hollandica 'Commelin'\"}, {key: \"Ulmus hollandica 'Groenveldt'\", text: \"Ulmus hollandica 'Groenveldt'\", value: \"Ulmus hollandica 'Groenveldt'\"}, {key: \"Ulmus hollandica Blandford\", text: \"Ulmus hollandica Blandford\", value: \"Ulmus hollandica Blandford\"}, {key: \"Ulmus parvifolia\", text: \"Ulmus parvifolia\", value: \"Ulmus parvifolia\"}, {key: \"Ulmus pioneer\", text: \"Ulmus pioneer\", value: \"Ulmus pioneer\"}, {key: \"Ulmus pumila\", text: \"Ulmus pumila\", value: \"Ulmus pumila\"}, {key: \"Ulmus species\", text: \"Ulmus species\", value: \"Ulmus species\"}, {key: \"Zelkova serrata\", text: \"Zelkova serrata\", value: \"Zelkova serrata\"}, {key: \"Zelkova serrata 'Green Vase'\", text: \"Zelkova serrata 'Green Vase'\", value: \"Zelkova serrata 'Green Vase'\"}, {key: \"Zelkova serrata 'Village Green'\", text: \"Zelkova serrata 'Village Green'\", value: \"Zelkova serrata 'Village Green'\"}\n]\n\nexport default scientificName\n","import React, {Component} from 'react'\nimport {Sidebar, Segment, Form, Header, Divider, Radio, Button} from 'semantic-ui-react'\nimport trees from '../data/trees.js'\nimport treesSciNames from '../data/sciName.js'\n\nclass Filters extends Component {\n  state = {\n    condition: '',\n    ward: '',\n    commonName: '',\n    sciName: ''\n  }\n\n\n// callbacks\n  handleCondition = (e, { value }) => this.setState({ condition: value })\n\n  handleWard = (e, { value }) => this.setState({ ward: value })\n\n  handleCommonName = (e, {value}) => this.setState({commonName: value})\n\n  handleSciName = (e, {value}) => this.setState({sciName: value})\n\n  handleReset = (e) => {\n    this.setState({ condition: '', ward: '', commonName: '', sciName: ''})\n    this.props.resetFilters()\n    this.props.closeFilters()\n  }\n\n  handleSubmit = (e) => {\n    this.props.handleFilters(this.state.condition, this.state.ward, this.state.commonName, this.state.sciName)\n    this.props.closeFilters()\n  }\n\n\n  render() {\n    const condition = this.state.condition\n    const ward = this.state.ward\n    const commonName = this.state.commonName\n    const sciName = this.state.sciName\n\n    return (\n          <Sidebar\n            as={Segment}\n            animation='overlay'\n            icon='labeled'\n            direction='right'\n            visible={this.props.visible}\n            width='very wide'\n            style={{\n              backgroundColor: 'white',\n              zIndex: '5',\n              paddingRight: '9%'\n            }}\n          >\n            <Header\n              as='h1'\n              size='huge'\n              style={{color: '#3a5344'}}\n            >Filter trees</Header>\n            <Divider/>\n            <p>Select ward, condition, common name or scientific name, and click on <strong>Filter</strong>. To see more details zoom in. </p>\n            <p>To reset the filters click <strong>Reset</strong>.</p>\n            <Form size='large' onSubmit={this.handleSubmit}>\n              <p style={{fontWeight: '700'}}>Ward</p>\n              <Form.Group inline>\n                <Form.Field\n                  control={Radio}\n                  label='1'\n                  value='1'\n                  checked={ward === '1'}\n                  onChange={this.handleWard}\n                />\n                <Form.Field\n                  control={Radio}\n                  label='2'\n                  value='2'\n                  checked={ward === '2'}\n                  onChange={this.handleWard}\n                />\n                <Form.Field\n                  control={Radio}\n                  label='3'\n                  value='3'\n                  checked={ward === '3'}\n                  onChange={this.handleWard}\n                />\n                <Form.Field\n                  control={Radio}\n                  label='4'\n                  value='4'\n                  checked={ward === '4'}\n                  onChange={this.handleWard}\n                />\n              </Form.Group>\n              <Form.Group inline>\n                <Form.Field\n                  control={Radio}\n                  label='5'\n                  value='5'\n                  checked={ward === '5'}\n                  onChange={this.handleWard}\n                />\n                <Form.Field\n                  control={Radio}\n                  label='6'\n                  value='6'\n                  checked={ward === '6'}\n                  onChange={this.handleWard}\n                />\n                <Form.Field\n                  control={Radio}\n                  label='7'\n                  value='7'\n                  checked={ward === '7'}\n                  onChange={this.handleWard}\n                />\n                <Form.Field\n                  control={Radio}\n                  label='8'\n                  value='8'\n                  checked={ward === '8'}\n                  onChange={this.handleWard}\n                />\n              </Form.Group>\n              <p style={{fontWeight: '700'}}>Condition</p>\n              <Form.Group inline>\n                <Form.Field\n                  control={Radio}\n                  label='Poor'\n                  value='Poor'\n                  checked={condition === 'Poor'}\n                  onChange={this.handleCondition}\n                />\n                <Form.Field\n                  control={Radio}\n                  label='Fair'\n                  value='Fair'\n                  checked={condition === 'Fair'}\n                  onChange={this.handleCondition}\n                />\n                <Form.Field\n                  control={Radio}\n                  label='Good'\n                  value='Good'\n                  checked={condition === 'Good'}\n                  onChange={this.handleCondition}\n                />\n                <Form.Field\n                  control={Radio}\n                  label='Excellent'\n                  value='Excellent'\n                  checked={condition === 'Excellent'}\n                  onChange={this.handleCondition}\n                />\n              </Form.Group>\n              <p style={{fontWeight: '700'}}>Common Name*</p>\n              <Form.Group widths='equal'>\n                <Form.Select\n                  fluid options={trees}\n                  value = {commonName}\n                  placeholder='Common Name'\n                  onChange={this.handleCommonName}\n                />\n              </Form.Group>\n              <p style={{fontWeight: '700'}}>Scientific Name*</p>\n              <Form.Group widths='equal'>\n                <Form.Select\n                  fluid options={treesSciNames}\n                  value = {sciName}\n                  placeholder='Scientific Name'\n                  onChange={this.handleSciName}\n                />\n              </Form.Group>\n              <p>*select common name <strong>or</strong> scientific name</p>\n              <Button type='submit' style={{backgroundColor: '#3a5344', color: 'white'}}>\n                Filter\n              </Button>\n              <Button onClick={this.handleReset}>\n                Reset\n              </Button>\n            </Form>\n          </Sidebar>\n    )\n  }\n\n}\n\nexport default Filters\n","import React, {Component} from 'react'\nimport {Sidebar, Segment, Image} from 'semantic-ui-react'\nimport logo from './dt-logo.png'\n\nclass About extends Component {\n\n  render() {\n    return (\n          <Sidebar\n            as={Segment}\n            animation='overlay'\n            icon='labeled'\n            direction='right'\n            visible={this.props.visible}\n            width='very wide'\n            style={{\n              backgroundColor: 'white',\n              zIndex: '5',\n              paddingRight: '9%'\n            }}\n          >\n            <Image src={logo} fluid/>\n              <p>\n                District Tree is an interactive map of street trees in Washington, D.C. that uses an <a\n                  href='http://opendata.dc.gov/datasets/f6c3c04113944f23a7993f2e603abaf2_23'\n                  target='_blank'\n                  rel=\"noopener noreferrer\"\n                  style={{color: '#e4a3a0'}}\n                >open dataset</a> curated by DDOT's Urban Forestry Division of the DC city government.\n              </p>\n              <p>\n                DC is well-known for cherry blossoms but the rest of the city has lots of wonderful greenery as well. Its streets are home to approximately 200,000 trees that have been an essential part of the city since Pierre L'Enfant's original design, drafted in 1791.\n              </p>\n              <a\n                href='http://www.anavharris.com/projects/district-tree'\n                target='_blank'\n                rel=\"noopener noreferrer\"\n                style={{color: '#edc4bc'}}\n              >\n                More info\n              </a>\n          </Sidebar>\n    )\n  }\n\n}\n\nexport default About\n","import React, {Component} from 'react'\nimport {Image, Menu, Sidebar, Popup} from 'semantic-ui-react'\nimport Filters from './Filters'\nimport About from './About'\nimport about from './about-icon.png'\nimport filter from './filter-icon.png'\n\n\nclass Navbar extends Component {\n  state = {\n    filterVisibility: false,\n    aboutVisibility: false\n   }\n\n// callbacks\n  handleFilterClick = () => this.setState({ filterVisibility: !this.state.filterVisibility, aboutVisibility: false })\n\n  handleAboutClick = () => this.setState({ aboutVisibility: !this.state.aboutVisibility, filterVisibility: false })\n\n  closeFilters = () => {\n    setTimeout(() => {\n      this.setState({filterVisibility: false})\n    }, 500)\n  }\n\n  render() {\n    const pinkStyling = {color: '#edc4bc'}\n\n    return (\n      <div>\n        <Sidebar\n          as={Menu}\n          direction='right'\n          animation='overlay'\n          icon='labeled'\n          inverted\n          vertical\n          visible={true}\n          width='thin'\n          style={{backgroundColor: '#3a5344', width: '8%'}}\n        >\n          <Popup trigger={\n              <Menu.Item as='a' style={pinkStyling} onClick={this.handleFilterClick}>\n                <Image src={filter} style={{width: '50%', margin: '10% auto'}}/>\n              </Menu.Item>\n            }\n            content=\"Filter trees\"\n            position='left center'\n            basic\n            style={{color: '#3a5344'}}\n          />\n          <Popup trigger={\n              <Menu.Item as='a' style={pinkStyling} onClick={this.handleAboutClick}>\n                <Image src={about} style={{width: '50%', margin: '10% auto'}}/>\n              </Menu.Item>\n            }\n            content=\"About\"\n            position='left center'\n            basic\n            style={{color: '#3a5344'}}\n          />\n        </Sidebar>\n\n        <Filters\n          visible={this.state.filterVisibility}\n          handleFilters={this.props.handleFilters}\n          resetFilters={this.props.resetFilters}\n          closeFilters={this.closeFilters}\n        />\n        <About visible={this.state.aboutVisibility}/>\n      </div>\n    )\n  }\n\n}\n\nexport default Navbar\n","import React, {Component} from 'react'\nimport logo from './loading-screen.png'\n\nfunction LoadingMessage() {\n  return (\n    <div id='loading-background'>\n      <img id='loading-logo' src={logo} alt='District Tree logo'/>\n    </div>\n  )\n}\n\nfunction withLoadingSpinner(WrappedComponent) {\n  return class extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        loading: true\n      }\n    }\n\n    async componentDidMount() {\n      try {\n        setTimeout(() => {\n         this.setState({\n           loading: false,\n         });\n       }, 2000)\n     } catch(err) {\n       console.log(err)\n       this.setState({ loading: false })\n     }\n    }\n\n    render() {\n      if (this.state.loading) return LoadingMessage()\n      return <WrappedComponent {...this.props}/>\n    }\n\n  }\n}\n\nexport default withLoadingSpinner\n","import React, { Component } from 'react'\nimport Navbar from './Components/Navbar'\nimport {Segment, Sidebar} from 'semantic-ui-react'\nimport {Map, TileLayer, Marker, Popup} from 'react-leaflet'\nimport MarkerClusterGroup from 'react-leaflet-markercluster'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\nimport withLoadingSpinner from './Components/withLoadingSpinner'\n\n// removes default marker icon\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// adds new marker icon\nconst customIcon = new L.Icon({\n    iconUrl: require('./assets/png/marker.png'),\n    iconSize: [25, 25]\n})\n\n// map styling\nconst accessToken = 'pk.eyJ1IjoiYW5haGFycmlzIiwiYSI6ImNqcWQyamVxOTBrMG40Mm4yYWFwYWtnc3gifQ.y6JLzfgsdsmZJqy1V1rsfg'\nconst tileUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}'\nconst attribution = 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\nconst maxZoom = 19\n\n// API URL\nconst URL = 'https://district-tree.herokuapp.com/trees'\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      trees: [],\n      coords: \"-77.2383499145508,38.805470223177466,-76.83460235595705,38.989569403083166\",\n      zoom: 12,\n      mapCenter: [38.8977, -77.0365],\n      ward: '',\n      condition: '',\n      commonName: '',\n      sciName: ''\n    }\n  }\n\n  componentDidMount = () => {\n      this.fetchTrees(this.state.condition, this.state.ward, this.state.commonName, this.state.sciName)\n  }\n\n  fetchTrees = (condition, ward, commonName, sciName) => {\n    fetch(`${URL}?bbox=${this.state.coords}&ward=${ward}&condition=${condition}&common_name=${commonName}&scientific_name=${sciName}`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({trees: data.features})\n      })\n  }\n\n// callbacks\n  handleMapMove = () => {\n    let swLng = this.leafletMap.leafletElement.getBounds()._southWest.lng\n    let swLat = this.leafletMap.leafletElement.getBounds()._southWest.lat\n    let neLng = this.leafletMap.leafletElement.getBounds()._northEast.lng\n    let neLat = this.leafletMap.leafletElement.getBounds()._northEast.lat\n    this.setState({coords: `${swLng},${swLat},${neLng},${neLat}`})\n    this.fetchTrees(this.state.condition, this.state.ward, this.state.commonName, this.state.sciName)\n  }\n\n  handleFilters = (condition, ward, commonName, sciName) => {\n    this.setState({condition: condition, ward: ward, commonName: commonName, sciName: sciName})\n    this.fetchTrees(condition, ward, commonName, sciName)\n  }\n\n  resetFilters = () => {\n    this.fetchTrees('', '', '', '')\n    this.setState({\n      condition: '',\n      ward: '',\n      commonName: '',\n      sciName: ''\n    })\n\n  }\n\n  render() {\n    return (\n      <div>\n        <Sidebar.Pushable\n          as={Segment}\n          style={{height: '100vh', overflow: 'hidden'}}\n        >\n        <Navbar\n          handleFilters={this.handleFilters}\n          resetFilters={this.resetFilters}\n        />\n        <Sidebar.Pusher\n          style={{height: '100vh', color: '#edc4bc'}}\n        >\n          <Map\n            ref={m => { this.leafletMap = m }}\n            id=\"map\"\n            center={this.state.mapCenter}\n            zoom={this.state.zoom}\n            maxZoom={maxZoom}\n            onMoveEnd={this.handleMapMove}\n          >\n            <TileLayer\n              attribution={attribution}\n              url={tileUrl}\n              id={'mapbox.light'}\n              accessToken={accessToken}\n            />\n              <MarkerClusterGroup\n              >\n            {this.state.trees.map(tree => {\n              return (\n                  <Marker\n                    key={`marker_${tree.properties.id}`}\n                    position={[tree.geometry.coordinates[1], tree.geometry.coordinates[0]]}\n                    icon={customIcon}\n                    style={{fontColor: '#edc4bc'}}\n                  >\n                  <Popup key={`pop_${tree.properties.id}`}>\n                    {tree.properties.common_name ? (<div>{`Common name: ${tree.properties.common_name}`}</div>) : null}\n                    {tree.properties.scientific_name ? (<div>{`Scientific name: ${tree.properties.scientific_name}`}</div>) : null}\n                    {tree.properties.fam_name ? (<div>{`Family: ${tree.properties.fam_name}`}</div>) : null}\n                    {tree.properties.genus_name ? (<div>{`Genus: ${tree.properties.genus_name}`}</div>) : null}\n                    {tree.properties.condition ? (<div>{`Condition: ${tree.properties.condition}`}</div>) : null}\n                    Address: {tree.properties.address}\n                  </Popup>\n                </Marker>\n              )\n            })}\n            </MarkerClusterGroup>\n          </Map>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    )\n  }\n}\n\nexport default withLoadingSpinner(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}